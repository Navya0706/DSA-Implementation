class Node {
    int root;
    Node left, right;

    public Node(int root) {
        this.root = root;
        this.left = null;
        this.right = null;
    }
}

public class BinaryTree {

    public static void inorder(Node node) {
        if (node != null) {
            inorder(node.left);
            System.out.print(node.root + " ");
            inorder(node.right);
        }
    }

    public static void preorder(Node node) {
        if (node != null) {
            System.out.print(node.root + " ");
            preorder(node.left);
            preorder(node.right);
        }
    }

    public static void postorder(Node node) {
        if (node != null) {
            postorder(node.left);
            postorder(node.right);
            System.out.print(node.root + " ");
        }
    }

    public static void main(String[] args) {
        Node root = new Node(1);
        root.left = new Node(2);
        root.right = new Node(3);
        root.left.left = new Node(4);
        root.left.right = new Node(5);
        root.right.left = new Node(6);
        root.right.right = new Node(7);

        System.out.print("In-order: ");
        inorder(root);
        System.out.println();

        System.out.print("Pre-order: ");
        preorder(root);
        System.out.println();

        System.out.print("Post-order: ");
        postorder(root);
    }
}
