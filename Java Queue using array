public class Queue {
    private int[] arr;
    private int front;
    private int rear;

    public Queue() {
        arr = new int[10];
        front = -1;
        rear = -1;
    }

    public void enqueue(int value) {
        if (rear == arr.length - 1) {
            System.out.println("Queue is full");
        } else {
            if (front == -1) {
                front = 0;
            }
            arr[++rear] = value;
        }
    }

    public int dequeue() {
        if (isEmpty()) {
            System.out.println("Queue is empty");
            return -1;
        } else {
            int value = arr[front];
            if (front == rear) {
                front = rear = -1;
            } else {
                front++;
            }
            return value;
        }
    }

    public int peek() {
        if (isEmpty()) {
            System.out.println("Queue is empty");
            return -1;
        } else {
            return arr[front];
        }
    }

    public boolean isEmpty() {
        return front == -1;
    }

    public void printArr() {
        if (isEmpty()) {
            System.out.println("Queue is empty");
        } else {
            for (int i = front; i <= rear; i++) {
                System.out.print(arr[i] + " ");
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        Queue queue = new Queue();
        queue.enqueue(10);
        queue.enqueue(20);
        queue.enqueue(30);
        queue.enqueue(40);

        queue.printArr();

        System.out.println(queue.peek());
        System.out.println(queue.dequeue());
        queue.printArr();

        System.out.println( queue.isEmpty());
    }
}
